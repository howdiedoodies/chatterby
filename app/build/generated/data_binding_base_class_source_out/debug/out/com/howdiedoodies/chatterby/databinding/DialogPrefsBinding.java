// Generated by view binder compiler. Do not edit!
package com.howdiedoodies.chatterby.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.howdiedoodies.chatterby.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogPrefsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCustomSound;

  @NonNull
  public final Button btnTimeEnd;

  @NonNull
  public final Button btnTimeStart;

  @NonNull
  public final EditText etThreshold;

  @NonNull
  public final Switch switchHighTip;

  private DialogPrefsBinding(@NonNull LinearLayout rootView, @NonNull Button btnCustomSound,
      @NonNull Button btnTimeEnd, @NonNull Button btnTimeStart, @NonNull EditText etThreshold,
      @NonNull Switch switchHighTip) {
    this.rootView = rootView;
    this.btnCustomSound = btnCustomSound;
    this.btnTimeEnd = btnTimeEnd;
    this.btnTimeStart = btnTimeStart;
    this.etThreshold = etThreshold;
    this.switchHighTip = switchHighTip;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPrefsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPrefsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_prefs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPrefsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_custom_sound;
      Button btnCustomSound = ViewBindings.findChildViewById(rootView, id);
      if (btnCustomSound == null) {
        break missingId;
      }

      id = R.id.btn_time_end;
      Button btnTimeEnd = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeEnd == null) {
        break missingId;
      }

      id = R.id.btn_time_start;
      Button btnTimeStart = ViewBindings.findChildViewById(rootView, id);
      if (btnTimeStart == null) {
        break missingId;
      }

      id = R.id.et_threshold;
      EditText etThreshold = ViewBindings.findChildViewById(rootView, id);
      if (etThreshold == null) {
        break missingId;
      }

      id = R.id.switch_high_tip;
      Switch switchHighTip = ViewBindings.findChildViewById(rootView, id);
      if (switchHighTip == null) {
        break missingId;
      }

      return new DialogPrefsBinding((LinearLayout) rootView, btnCustomSound, btnTimeEnd,
          btnTimeStart, etThreshold, switchHighTip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
